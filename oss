#!/bin/sh

printUsage() 
{
	echo "      Usage: oss [-u user] [-p port] [-i identify_key] [-l ip_list_file] [ip1 ip2 ... ipn]"
	echo "      eg: oss test12 test13"
	echo "      eg: oss -l ip_list_file"
	exit 2
}



#load config file
if [ -e config.sh ]
then
	source config.sh
fi


#parse argument
has_specify_ip_list=0

while getopts "hi:l:p:a:" option
do
	case $option in
		i)
			key="-i $OPTARG";;
    		p)
			port=$OPTARG;;
    		u)
			user=$OPTARG;;
    		l)
			ip_list_file=$OPTARG
			has_specify_ip_list=1
			;;
		[?])
			printUsage
			;;
	esac
done

hosts=$*

if [ 1 -eq ${has_specify_ip_list} ]
then
	hosts=`cat ${ip_list_file}`
fi

if [ -z "${hosts}" ]
then
	printUsage
fi


if [ -n "${port}" ]
then
	sshStringPrefix="${sshStringPrefix} -P ${port}";
fi

if [ -n "${key}" ]
then
	sshStringPrefix="${sshStringPrefix} -P ${port}";
fi

if [ -n "${user}" ]
then
	sshStringPrefix="${sshStringPrefix} ${user}@";
fi


#construct tumux window
tmux new-session -d -s localhost

i=0
hasCloseFirstPane=false
for host in ${hosts}
do
	#a tmux window could contain 6 pane at most
	#so close the first incase output 'create pane failed: pane too small'
	if [ 1 -eq ${i} ]
	then 
		echo 'killed'
		tmux kill-pane -t 0
		hasCloseFirstPane=true
	fi
	tmux split-window -h "ssh ${sshStringPrefix} ${host}"
	i=$((i+1))
done

if [ false = ${hasCloseFirstPane} ]
then
	tmux kill-pane -t 0
fi

tmux select-pane -t 0
tmux select-layout tiled
tmux set-window-option synchronize-panes on
 
tmux -2 attach-session -t localhost


